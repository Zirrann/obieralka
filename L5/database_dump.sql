--
-- PostgreSQL database dump
--

-- Dumped from database version 17.0
-- Dumped by pg_dump version 17.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: Categories; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Categories" (
    "CategoryId" integer NOT NULL,
    "Name" character varying(100) NOT NULL
);


ALTER TABLE public."Categories" OWNER TO postgres;

--
-- Name: Categories_CategoryId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Categories" ALTER COLUMN "CategoryId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Categories_CategoryId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: OrderProducts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."OrderProducts" (
    "OrderId" integer NOT NULL,
    "ProductId" integer NOT NULL
);


ALTER TABLE public."OrderProducts" OWNER TO postgres;

--
-- Name: Orders; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Orders" (
    "OrderId" integer NOT NULL,
    "CustomerName" character varying(100) NOT NULL
);


ALTER TABLE public."Orders" OWNER TO postgres;

--
-- Name: Orders_OrderId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Orders" ALTER COLUMN "OrderId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Orders_OrderId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Products" (
    "Id" integer NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Price" numeric(18,2) NOT NULL,
    "StockId" integer NOT NULL,
    "CategoryId" integer NOT NULL
);


ALTER TABLE public."Products" OWNER TO postgres;

--
-- Name: Products_Id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Products" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Products_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Stocks; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Stocks" (
    "StockId" integer NOT NULL,
    "Quantity" integer NOT NULL
);


ALTER TABLE public."Stocks" OWNER TO postgres;

--
-- Name: Stocks_StockId_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Stocks" ALTER COLUMN "StockId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Stocks_StockId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO postgres;

--
-- Data for Name: Categories; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Categories" ("CategoryId", "Name") FROM stdin;
1	red
2	blue
3	black
\.


--
-- Data for Name: OrderProducts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."OrderProducts" ("OrderId", "ProductId") FROM stdin;
3	16
1	24
1	21
1	23
\.


--
-- Data for Name: Orders; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Orders" ("OrderId", "CustomerName") FROM stdin;
1	string
3	2
\.


--
-- Data for Name: Products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Products" ("Id", "Name", "Price", "StockId", "CategoryId") FROM stdin;
21	p1	1.00	16	2
16	zmiana	52.00	12	3
23	test2	110.00	18	1
24	123	32.00	20	1
12	e	2.00	9	3
26	new	12.00	22	2
\.


--
-- Data for Name: Stocks; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Stocks" ("StockId", "Quantity") FROM stdin;
1	10
2	20
3	15
4	15
5	15
6	15
7	15
8	15
10	15
11	15
12	15
13	15
14	15
15	15
16	1
17	9
9	1
18	120
19	13
20	1
21	-1
22	1
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20241121162832_Init	8.0.10
20241121164954_OrderProductDto	8.0.10
\.


--
-- Name: Categories_CategoryId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Categories_CategoryId_seq"', 4, true);


--
-- Name: Orders_OrderId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Orders_OrderId_seq"', 3, true);


--
-- Name: Products_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Products_Id_seq"', 26, true);


--
-- Name: Stocks_StockId_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Stocks_StockId_seq"', 22, true);


--
-- Name: Categories PK_Categories; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Categories"
    ADD CONSTRAINT "PK_Categories" PRIMARY KEY ("CategoryId");


--
-- Name: OrderProducts PK_OrderProducts; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."OrderProducts"
    ADD CONSTRAINT "PK_OrderProducts" PRIMARY KEY ("OrderId", "ProductId");


--
-- Name: Orders PK_Orders; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Orders"
    ADD CONSTRAINT "PK_Orders" PRIMARY KEY ("OrderId");


--
-- Name: Products PK_Products; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Products"
    ADD CONSTRAINT "PK_Products" PRIMARY KEY ("Id");


--
-- Name: Stocks PK_Stocks; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Stocks"
    ADD CONSTRAINT "PK_Stocks" PRIMARY KEY ("StockId");


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: IX_OrderProducts_ProductId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_OrderProducts_ProductId" ON public."OrderProducts" USING btree ("ProductId");


--
-- Name: IX_Products_CategoryId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Products_CategoryId" ON public."Products" USING btree ("CategoryId");


--
-- Name: IX_Products_StockId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_Products_StockId" ON public."Products" USING btree ("StockId");


--
-- Name: OrderProducts FK_OrderProducts_Orders_OrderId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."OrderProducts"
    ADD CONSTRAINT "FK_OrderProducts_Orders_OrderId" FOREIGN KEY ("OrderId") REFERENCES public."Orders"("OrderId") ON DELETE CASCADE;


--
-- Name: OrderProducts FK_OrderProducts_Products_ProductId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."OrderProducts"
    ADD CONSTRAINT "FK_OrderProducts_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES public."Products"("Id") ON DELETE CASCADE;


--
-- Name: Products FK_Products_Categories_CategoryId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Products"
    ADD CONSTRAINT "FK_Products_Categories_CategoryId" FOREIGN KEY ("CategoryId") REFERENCES public."Categories"("CategoryId") ON DELETE CASCADE;


--
-- Name: Products FK_Products_Stocks_StockId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Products"
    ADD CONSTRAINT "FK_Products_Stocks_StockId" FOREIGN KEY ("StockId") REFERENCES public."Stocks"("StockId") ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

